const FACTION_INFO = (() => {

  const factionsByAbbrev = {};
  const factionsByAlignment = [];
  const factionsById = {};

  const factions = [
    <%= for army <- army_lists() do %>
      <%= { :safe, "{ \"abbrev\": \"#{army.abbrev}\", \"id\": #{army.id}, \"name\": \"#{army.name}\", \"alignment\": #{army.alignment}, \"legacy\": #{if army.legacy, do: "true", else: "false"}, \"keywords\": \"#{army.keywords}\" }," } %>
    <% end %>
  ];

  const getWithRefresh = (getter, param) => {
    const res = getter.call(window, param);
    if (!res) {
        alert("Your army lists are out of date.  Click [OK] to reload the app.");
        location.reload();
    }

    return res;
  };

  factionsByAlignment[0] = [];
  factionsByAlignment[1] = [];

  factions.forEach(f => {
    factionsByAbbrev[f.abbrev] = f;
    factionsByAlignment[f.alignment].push(f);
    factionsById[f.id] = f;
  });

  factions.sort((a, b) =>
    a.name < b.name
      ? -1
      : b.name < a.name
        ? 1
        : 0);

  return {
    byAbbrev: abbrev => getWithRefresh(s => factionsByAbbrev[s], abbrev),

    byAlignment: align => getWithRefresh(n => factionsByAlignment[n], align),

    byId: id => getWithRefresh(s => factionsById[s], id),

    all: () => factions
  };
})();

const BOOK_INFO = (() => {

  const booksByKey = {};

  const books = [
    <%= for book <- books() do %>
      <%= { :safe, "{ \"key\": \"#{book.key}\", \"shortName\": \"#{book.short_name}\", \"year\": \"#{book.year}\", \"name\": \"#{book.name}\" }," } %>
    <% end %>
  ];

  const getWithRefresh = (getter, param) => {
    const res = getter.call(window, param);
    if (!res) {
      alert("Your app is out of date. Click [OK] to reload the app. " + param);
      location.reload();
    }

    return res;
  };

  books.forEach(b => {
    booksByKey[b.key] = b;

    if (b.year) {
      b.shortName += " (" + b.year + ")";
      b.name += " (" + b.year + ")";
    }
  });

  return {
    all: () => books,

    allAsHash: () => booksByKey,

    byId: id => getWithRefresh(s => books[s], id),

    byKey: key => getWithRefresh(s => booksByKey[s], key)
  };
})();
